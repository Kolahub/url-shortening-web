// File generated from our OpenAPI spec by Stainless.
import { APIResource } from 'dub/resource';
import * as BulkAPI from 'dub/resources/links/bulk';
import * as InfoAPI from 'dub/resources/links/info';
export class Links extends APIResource {
    constructor() {
        super(...arguments);
        this.info = new InfoAPI.Info(this._client);
        this.bulk = new BulkAPI.Bulk(this._client);
    }
    /**
     * Create a new link for the authenticated project.
     */
    create(params, options) {
        const { projectSlug = this._client.projectSlug, ...body } = params;
        return this._client.post('/links', { query: { projectSlug }, body, ...options });
    }
    /**
     * Edit a link for the authenticated project.
     */
    update(linkId, params, options) {
        const { projectSlug = this._client.projectSlug, ...body } = params;
        return this._client.put(`/links/${linkId}`, { query: { projectSlug }, body, ...options });
    }
    /**
     * Retrieve a list of links for the authenticated project. The list will be
     * paginated and the provided query parameters allow filtering the returned links.
     */
    list(params, options) {
        const { projectSlug = this._client.projectSlug, ...query } = params;
        return this._client.get('/links', { query: { projectSlug, ...query }, ...options });
    }
    /**
     * Delete a link for the authenticated project.
     */
    deleteLink(linkId, params, options) {
        const { projectSlug = this._client.projectSlug } = params;
        return this._client.delete(`/links/${linkId}`, { query: { projectSlug }, ...options });
    }
}
(function (Links) {
    Links.Info = InfoAPI.Info;
    Links.Bulk = BulkAPI.Bulk;
})(Links || (Links = {}));
//# sourceMappingURL=links.mjs.map